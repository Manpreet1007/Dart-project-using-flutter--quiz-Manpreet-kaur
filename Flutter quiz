
import 'package:flutter/material.dart';

void main() {
  runApp(QuizGameApp());
}

class QuizGameApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Quiz Game',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: QuizScreen(),
    );
  }
}

class QuizScreen extends StatefulWidget {
  @override
  _QuizScreenState createState() => _QuizScreenState();
}

class _QuizScreenState extends State<QuizScreen> {
  final List<Map<String, Object>> _questions = [
    {
      'question': 'What is the capital of France?',
      'options': ['Berlin', 'Madrid', 'Paris', 'Rome'],
      'answer': 'Paris',
    },
    {
      'question': 'What is 2 + 2?',
      'options': ['3', '4', '5', '6'],
      'answer': '4',
    },
    {
      'question': 'Which planet is known as the Red Planet?',
      'options': ['Earth', 'Mars', 'Jupiter', 'Venus'],
      'answer': 'Mars',
    },
    {
      'question': 'How many letters are there in the english alphabet?',
      'options': ['23', '18', '25', '26'],
      'answer': '26',
    },
    {
      'question': 'What is the acronym for the colours of the rainbow?',
      'options': ['VIBGYOR', 'ROYGVIB', 'GYBVIOR', 'YORVIGB'],
      'answer': 'VIBGYOR',
    },
    {
      'question': 'How many second make an hour?',
      'options': ['790', '7800', '3600', '1200'],
      'answer': '3600',
    },
    {
      'question': 'How many continents are there in the world?',
      'options': ['5', '8', '10', '7'],
      'answer': '7',
    },
    {
      'question': 'What is the percentage of oxygen in the atmosphere?',
      'options': ['21', '34', '25', '81'],
      'answer': '21',
    },
    {
      'question': 'Which is the deepest ocean in the world?',
      'options': [
        'Indian Ocean',
        'Pacific Ocean',
        'Arctic Ocean',
        'Atlantic Ocean'
      ],
      'answer': 'Pacific Ocean',
    },
    {
      'question': 'Who is called the father of our nation?',
      'options': [
        'Dr. Bheem Rao Ambedkar',
        'Mahatma Gandhi',
        'Pandit Jawaharlal Nehru ',
        'Sardar Vallabhai Patel'
      ],
      'answer': 'Mahatma Gandhi',
    },
  ];

  int _currentQuestionIndex = 0;
  int _score = 0;
  bool _showResult = false;

  void _answerQuestion(String selectedOption) {
    if (selectedOption == _questions[_currentQuestionIndex]['answer']) {
      setState(() {
        _score++;
      });
    }

    setState(() {
      if (_currentQuestionIndex < _questions.length - 1) {
        _currentQuestionIndex++;
      } else {
        _showResult = true;
      }
    });
  }

  void _resetQuiz() {
    setState(() {
      _currentQuestionIndex = 0;
      _score = 0;
      _showResult = false;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Quiz Game'),
      ),
      body: _showResult
          ? Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'Your Score: $_score/${_questions.length}',
                    style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                  ),
                  SizedBox(height: 20),
                  ElevatedButton(
                    onPressed: _resetQuiz,
                    child: Text('Restart Quiz'),
                  ),
                ],
              ),
            )
          : Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Padding(
                  padding: const EdgeInsets.all(16.0),
                  child: Text(
                    _questions[_currentQuestionIndex]['question'] as String,
                    style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                  ),
                ),
                ...(_questions[_currentQuestionIndex]['options']
                        as List<String>)
                    .map(
                  (option) => Padding(
                    padding: const EdgeInsets.symmetric(
                        horizontal: 16.0, vertical: 8.0),
                    child: ElevatedButton(
                      onPressed: () => _answerQuestion(option),
                      child: Text(option),
                    ),
                  ),
                ),
              ],
            ),
    );
  }
}

